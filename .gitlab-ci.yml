image: alpine:latest

stages:
  - test
  - build
  - deploy # dummy stage to follow the template guidelines
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

  ROLLOUT_RESOURCE_TYPE: deployment
  POSTGRES_ENABLED: "false"

test:
  stage: test
  image: node:12-alpine
  script:
    - npm install
    - CI=true npm run test
  only:
    - branches
    - tags
  cache: &node_modules_cache
    paths:
      - node_modules

build:
  stage: build
  services:
    - docker:19.03.1-dind
  image: node:12-alpine
  before_script:
    - apk add docker git
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - docker login $CI_REGISTRY -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  script:
    - npm install
    - npm run release
    - docker build -t $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG .
    - docker push $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG
  only:
    - branches
    - tags
  cache:
    <<: *node_modules_cache

production:
  environment:
    url: https://app.pmachado.xyz

include:
  - template: Jobs/Deploy.gitlab-ci.yml # https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/gitlab/ci/templates/Jobs/Deploy.gitlab-ci.yml

